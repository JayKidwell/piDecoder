

from
https://cloud.google.com/speech/docs/getting-started

1. Create a JSON request file with the following text, and save it as a sync-request.json plain text file:

{
  'config': {
      'encoding':'FLAC',
      'sampleRate': 16000,
      'languageCode': 'en-US'
  },
  'audio': {
      'uri':'gs://cloud-samples-tests/speech/brooklyn.flac'
  }
}

the gs: protocol is actually this sound file:
https://storage.googleapis.com/cloud-samples-tests/speech/brooklyn.flac

which says "how old is the brooklyn bridge"



2 Authenticate to your service account, passing the location of your service account key file:

C:\Program Files (x86)\Google\Cloud SDK>gcloud auth activate-service-account --key-file=C:\Users\jay\Downloads\piDecoder-f903aadf5183.json

Activated service account credentials for: [speechtotext@pidecoder.iam.gserviceaccount.com]

this json file was a download created when I created credentisudo als for the speech api on the pidecoder project on the google cloud account



3 Obtain an authorizaton token using your service account:

C:\Program Files (x86)\Google\Cloud SDK>gcloud auth print-access-token

ya29.El8MBJZ9wrsIzEfmko1MUSz_1Jq01awOlqdIDIawOnZqKXC5J7Oc5A6HV_7KFt5YNqfdjP--qwmP3nCZ_ZYSzfEOLra-RKT4RJgH3EHzAG_isfkAZhFuSWnZu9Cqcci72w


4 Use curl to make a speech:syncrecognize request, passing it the access token you printed, and the filename of the JSON request you set up in step 1:

(Note that to pass a filename to curl you use the -d option (for "data") and precede the filename with an @ sign. 
This file should be in the same directory in which you execute the curl command.)

copied this to a bat file and ran it...

curl -s -k -H "Content-Type: application/json" -H "Authorization: Bearer ya29.El8MBJZ9wrsIzEfmko1MUSz_1Jq01awOlqdIDIawOnZqKXC5J7Oc5A6HV_7KFt5YNqfdjP--qwmP3nCZ_ZYSzfEOLra-RKT4RJgH3EHzAG_isfkAZhFuSWnZu9Cqcci72w"     https://speech.googleapis.com/v1beta1/speech:syncrecognize     -d @C:\Users\jay\OneDrive\Documents\piDecoder\GoogleApiTest\sync-request.json


and it returned this...!!

{
  "results": [
    {
      "alternatives": [
        {
          "transcript": "how old is the Brooklyn Bridge",
          "confidence": 0.98267895
        }
      ]
    }
  ]
}





Setting google application credentials for linux...

You can add it to the file .profile or .bashrc or your current shell profile file (located in your home directory). Then, each time you open your shell it will be loaded.

To change the environmental variable "permanently" you'll need to consider at least these situations:

Login/Non-login shell
Interactive/Non-interactive shell
bash

Bash as login shell will load /etc/profile, ~/.bash_profile, ~/.bash_login, ~/.profile in the order
Bash as non-login interactive shell will load ~/.bashrc
Bash as non-login non-interactive shell will load the configuration specified in environment variable $BASH_ENV
$EDITOR ~/.bashrc
#add lines at the bottom of the file:  
     export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib
     export ORACLE_HOME=/usr/lib/oracle/11.2/client64
zsh

$EDITOR ~/.zshrc
#add lines at the bottom of the file:  
     export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib
     export ORACLE_HOME=/usr/lib/oracle/11.2/client64
ksh

$EDITOR ~/.profile
#add lines at the bottom of the file:  
     export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib
     export ORACLE_HOME=/usr/lib/oracle/11.2/client64
bourne

$EDITOR ~/.profile
#add lines at the bottom of the file:  
     LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib     
     ORACLE_HOME=/usr/lib/oracle/11.2/client64
     export LD_LIBRARY_PATH ORACLE_HOME
csh or tcsh

$EDITOR ~/.login
#add lines at the bottom of the file:  
     setenv LD_LIBRARY_PATH /usr/lib/oracle/11.2/client64/lib
     setenv ORACLE_HOME /usr/lib/oracle/11.2/client64
If you want to make it permanent for all users, you can edit /etc/profile or /etc/environment.
In this case follow the syntax you see already present in your file.



